name: CI

on:
  pull_request:
    types: [opened, synchronize]
    branches: 
      - main

env:
  DOCKER_IMAGE: "agustinlare/galsandbox"
  DOCKER_TAG: ${{ github.sha }}

jobs:
  validate-yaml:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Echo enviroment variable
        run: echo ${{env.DOCKER_IMAGE}}:${{ env.DOCKER_TAG }}

      - name: Install kubeval
        run: |
          curl -LO "https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz"
          tar xf kubeval-linux-amd64.tar.gz
          sudo install kubeval /usr/local/bin/
          rm kubeval-linux-amd64.tar.gz

      - name: Validate Kubernetes manifest
        run: kubeval manifest.yaml

  build-and-push:
    runs-on: ubuntu-latest
    needs: validate-yaml
    if: github.event.pull_request.merged == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

  scan-image:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event.pull_request.merged == false

    steps:
        - name: Scan for vulnerabilities
          run: echo "Hello, world!" ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

    #   - name: Scan for vulnerabilities
    #     uses: crazy-max/ghaction-container-scan@v2
    #     with:
    #       image:  ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

  